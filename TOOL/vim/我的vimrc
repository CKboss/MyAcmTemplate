syntax on
syntax enable
set cindent
set mouse=a
set tabstop=4
set shiftwidth=4
set nu
set nocompatible
set showmode
set showcmd
set ignorecase smartcase
set hlsearch
set autoindent
set smarttab
set smartindent

//color solarized
set background=light

set gfn=Source\ Code\ Pro\ 14

map <F5> :call Run()<CR>
func! Run()
    exec "w"
    exec "!g++ % -g -o %<"
    exec "!./%<"
endfunc

map <C-A> ggVG"+y

map <F12> :call SetTitle()<CR>
func SetTitle()
let l = 0
let l = l + 1 | call setline(l,'/* ***********************************************')
let l = l + 1 | call setline(l,'Author        :CKboss')
let l = l + 1 | call setline(l,'Created Time  :'.strftime('%c'))
let l = l + 1 | call setline(l,'File Name     :'.expand('%'))
let l = l + 1 | call setline(l,'************************************************ */')
let l = l + 1 | call setline(l,'')

let l = l + 1 | call setline(l,'#include <iostream>')
let l = l + 1 | call setline(l,'#include <cstdio>')
let l = l + 1 | call setline(l,'#include <cstring>')
let l = l + 1 | call setline(l,'#include <algorithm>')
let l = l + 1 | call setline(l,'#include <string>')
let l = l + 1 | call setline(l,'#include <cmath>')
let l = l + 1 | call setline(l,'#include <cstdlib>')
let l = l + 1 | call setline(l,'#include <vector>')
let l = l + 1 | call setline(l,'#include <queue>')
let l = l + 1 | call setline(l,'#include <set>')
let l = l + 1 | call setline(l,'#include <map>')
let l = l + 1 | call setline(l,'')
let l = l + 1 | call setline(l,'using namespace std;')
let l = l + 1 | call setline(l,'')
let l = l + 1 | call setline(l,'int main()')
let l = l + 1 | call setline(l,'{')
let l = l + 1 | call setline(l,'    //freopen("in.txt","r",stdin);')
let l = l + 1 | call setline(l,'    //freopen("out.txt","w",stdout);')
let l = l + 1 | call setline(l,'    ')
let l = l + 1 | call setline(l,'    return 0;')
let l = l + 1 | call setline(l,'}')
endfunc


/********编译运行脚本***************/
#!bin/bash
g++ TITLE.cpp -o TITLE
echo -------TITLE编译结束--------
./TITLE
echo --------按任意键结束--------
read

/*******另一个更全面的Run函数**********/

map <F5> :call Run()<CR>
func! Run()
    exec "w"
	if &filetype is 'cpp' || &filetype is 'c' || &filetype is 'cc'
   		exec "!clang++ % -g -o %<"
    	exec "!./%<"
	elseif &filetype is 'java'
		exec "!javac\ -d\ .\ %"
		exec "!java\ %<"
	endif
endfunc

